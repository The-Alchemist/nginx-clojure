###This configuration not enable coroutine or thread pool.

###you can uncomment next two lines for easy debug
daemon  off;

###Warning: if master_process is off, there will be only one nginx worker running. Only use it for debug propose.
#master_process  off;

#user  nobody;

###you can set worker_processes =1 for easy debug
###if master_process is off, the count of worker processes will be 1 regardless of worker_processes settings
worker_processes  25;

error_log   logs/error.log;
#error_log   logs/error.log  debug;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
    #debug_connection 127.0.0.1;
    multi_accept on;
}



http {


    include       mime.types;
    default_type  text/html;
    
    #max_balanced_tcp_connections 1024;

    sendfile  on;
    tcp_nopush  on;
    tcp_nodelay on;
    #keepalive_timeout   65;
    # keepalive_requests  100000;
    server_tokens off;
    reset_timedout_connection on;

    #gzip  on;


    #jvm_path auto;
    jvm_path /usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so;
    
    jvm_var ncdev '/home/who/git/nginx-clojure';
    jvm_var mrr '/home/who/.m2/repository';
    jvm_var ncjar '#{ncdev}/target/nginx-clojure-0.5.2.jar';

    
    ###run tool mode , 't' means Tool
    #jvm_options "-javaagent:#{ncjar}=tmb";
    ###Setting Output Path of Waving Configuration File, default is $nginx-workdir/nginx.clojure.wave.CfgToolOutFile
    #jvm_options "-Dnginx.clojure.wave.CfgToolOutFile=/tmp/my-wave-cfg.txt";
    
    ###coroutine enabled mode
    #jvm_options "-javaagent:#{ncjar}=mb";
    ###for win32, class path seperator is ";"
    #jvm_options "-Xbootclasspath/a:#{ncjar}:#{mrr}/org/clojure/clojure/1.9.0/clojure-1.9.0.jar:#{mrr}/org/clojure/spec.alpha/0.1.143/spec.alpha-0.1.143.jar";
   
   
    ###wave log level, default is error
    #jvm_options "-Dnginx.clojure.logger.wave.level=info";
    
    jvm_options "-Dnginx.clojure.logger.socket.level=error";
    
    ###nginx clojure log level, default is info
    jvm_options "-Dnginx.clojure.logger.level=debug";

    #jvm_options "-Dnginx.clojure.wave.trace.classmethodpattern=sun.reflect.*|nginx.*|org.org.codehaus.groovy.*|java.lang.reflect.*|groovy.*";
    #jvm_options "-Dnginx.clojure.wave.trace.classpattern=com.mysql.jdbc.StatementImpl";

    jvm_classpath_check off;
    
    ###including ring-core & compojure & clj-http & clj-jdbc & mysql-connector-java for test
    jvm_classpath "#{ncdev}/test/nginx-working-dir/coroutine-udfs:#{ncdev}/bin:#{ncjar}:#{ncdev}/target/testclasses:#{ncdev}/test/resources:#{ncdev}/test/clojure:#{ncdev}/src/clojure:#{ncdev}/test/groovy:#{mrr}/clout/clout/1.1.0/clout-1.1.0.jar:#{mrr}/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:#{mrr}/nrepl/nrepl/0.6.0/nrepl-0.6.0.jar:#{mrr}/redis/clients/jedis/3.1.0/jedis-3.1.0.jar:#{mrr}/clojure-complete/clojure-complete/0.2.5/clojure-complete-0.2.5.jar:#{mrr}/org/clojure/tools.macro/0.1.0/tools.macro-0.1.0.jar:#{mrr}/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar:#{mrr}/org/apache/httpcomponents/httpclient/4.3.1/httpclient-4.3.1.jar:#{mrr}/commons-io/commons-io/2.6/commons-io-2.6.jar:#{mrr}/commons-logging/commons-logging/1.1.3/commons-logging-1.1.3.jar:#{mrr}/com/fasterxml/jackson/dataformat/jackson-dataformat-smile/2.2.1/jackson-dataformat-smile-2.2.1.jar:#{mrr}/crypto-equality/crypto-equality/1.0.0/crypto-equality-1.0.0.jar:#{mrr}/org/clojure/java.jdbc/0.3.3/java.jdbc-0.3.3.jar:#{mrr}/junit/junit/4.11/junit-4.11.jar:#{mrr}/stylefruits/gniazdo/1.1.2/gniazdo-1.1.2.jar:#{mrr}/slingshot/slingshot/0.10.3/slingshot-0.10.3.jar:#{mrr}/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:#{mrr}/commons-fileupload/commons-fileupload/1.3.3/commons-fileupload-1.3.3.jar:#{mrr}/org/clojure/core.incubator/0.1.0/core.incubator-0.1.0.jar:#{mrr}/org/apache/httpcomponents/httpcore/4.3/httpcore-4.3.jar:#{mrr}/org/eclipse/jetty/websocket/websocket-common/9.4.19.v20190610/websocket-common-9.4.19.v20190610.jar:#{mrr}/org/jsoup/jsoup/1.7.1/jsoup-1.7.1.jar:#{mrr}/org/codehaus/groovy/groovy/2.5.8/groovy-2.5.8.jar:#{mrr}/org/apache/httpcomponents/httpmime/4.3.1/httpmime-4.3.1.jar:#{mrr}/tigris/tigris/0.1.1/tigris-0.1.1.jar:#{mrr}/org/eclipse/jetty/websocket/websocket-client/9.4.19.v20190610/websocket-client-9.4.19.v20190610.jar:#{mrr}/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar:#{mrr}/org/eclipse/jetty/jetty-http/9.4.19.v20190610/jetty-http-9.4.19.v20190610.jar:#{mrr}/commons-codec/commons-codec/1.8/commons-codec-1.8.jar:#{mrr}/com/fasterxml/jackson/core/jackson-core/2.2.1/jackson-core-2.2.1.jar:#{mrr}/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:#{mrr}/org/eclipse/jetty/jetty-util/9.4.19.v20190610/jetty-util-9.4.19.v20190610.jar:#{mrr}/org/eclipse/jetty/jetty-io/9.4.19.v20190610/jetty-io-9.4.19.v20190610.jar:#{mrr}/mysql/mysql-connector-java/5.1.30/mysql-connector-java-5.1.30.jar:#{mrr}/org/clojure/core.specs.alpha/0.1.24/core.specs.alpha-0.1.24.jar:#{mrr}/org/clojure/data.json/0.2.5/data.json-0.2.5.jar:#{mrr}/org/clojure/tools.reader/0.8.1/tools.reader-0.8.1.jar:#{mrr}/org/clojure/tools.trace/0.7.10/tools.trace-0.7.10.jar:#{mrr}/org/eclipse/jetty/websocket/websocket-api/9.4.19.v20190610/websocket-api-9.4.19.v20190610.jar:#{mrr}/clj-time/clj-time/0.14.3/clj-time-0.14.3.jar:#{mrr}/org/clojure/clojure/1.9.0/clojure-1.9.0.jar:#{mrr}/clj-http/clj-http/0.7.8/clj-http-0.7.8.jar:#{mrr}/org/eclipse/jetty/jetty-xml/9.4.19.v20190610/jetty-xml-9.4.19.v20190610.jar:#{mrr}/org/eclipse/jetty/jetty-client/9.4.19.v20190610/jetty-client-9.4.19.v20190610.jar:#{mrr}/ring/ring-codec/1.1.1/ring-codec-1.1.1.jar:#{mrr}/compojure/compojure/1.1.6/compojure-1.1.6.jar:#{mrr}/org/clojure/spec.alpha/0.1.143/spec.alpha-0.1.143.jar:#{mrr}/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:#{mrr}/cheshire/cheshire/5.2.0/cheshire-5.2.0.jar:#{mrr}/ring/ring-core/1.7.1/ring-core-1.7.1.jar:#{mrr}/crypto-random/crypto-random/1.2.0/crypto-random-1.2.0.jar:#{mrr}/joda-time/joda-time/2.9.9/joda-time-2.9.9.jar:#{mrr}/crouton/crouton/0.1.1/crouton-0.1.1.jar";        
    
    
    ###setting user defined class waving configuration files which are in the above boot classpath
    #jvm_options "-Dnginx.clojure.wave.udfs=compojure-http-clj.txt,mysql-jdbc.txt,test-groovy.txt,https.txt,redis.txt";
    
    jvm_options "-Dfile.encoding=UTF-8";
    
    ###for enable java remote debug uncomment next two lines, make sure "master_process = off"
    #jvm_options "-Xdebug";
    #jvm_options "-Xrunjdwp:server=y,transport=dt_socket,address=840#{pno},suspend=n";
    
    #for outofmemory dump
    #jvm_options "-XX:+HeapDumpOnOutOfMemoryError";
    
    #jvm_options "-Xverify:none";
    #jvm_options "-XX:+UseSerialGC";
    # jvm_options "-XX:MaxGCPauseMillis=25";
    #jvm_options "-XX:+UseG1GC";
    
    jvm_options "-Xms512m";
    jvm_options "-Xmx512m";
    
    shared_map PubSubTopic tinymap?space=1m&entries=256;
    
    shared_map testTinyMap tinymap?space=1m&entries=8096;
    
    shared_map testHashMap hashmap?space=2m&entries=8096;

    #If jvm_workers > 0 and coroutine disabled, it is threads number (per nginx worker) for request handler thread pool on jvm. 
    #jvm_workers 16;
    

    
    server {
        listen       8080;
        server_name  localhost;
       
       #uncomment this two lines for performance test 
        access_log off;
#	     error_log /dev/null crit;


       
       location /java/loadheader {
           content_handler_type java;
           content_handler_name 'nginx.clojure.java.Loadstress$HeaderEchoHanlder';
       }
  }
}
